linux interfaces name format



With v197 we introduced predictable network interface names in systemd/udev that includes hardware information rather than a reference to the driver used. The following names are supported:

        Names incorporating Firmware/BIOS provided index numbers for on-board devices (example: eno1)
        Names incorporating Firmware/BIOS provided PCI Express hotplug slot index numbers (example: ens1)
        Names incorporating physical/geographical location of the connector of the hardware (example: enp2s0)
        Names incorporating the interfaces's MAC address (example: enx78e7d1ea46da)
        Classic, unpredictable kernel-native ethX naming (example: eth0)

So what you observe on installing 15.10 is a consequence of kernel evolution.



	
You can define a udev rule to rename the interface as eth0..lets say the MAC address of the interface is xx:XX:xx:YY:yy:ZZ then you can create a file in /etc/udev/rules.d/ e.g. 99-rename-net.rules and put SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="xx:XX:xx:YY:yy:ZZ", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0" in the file..if you don't know the MAC address then you can get it from /sys/class/net/enp1so/address file


Come again, what good does this do?

With this new scheme you now get:

    Stable interface names across reboots
    Stable interface names even when hardware is added or removed, i.e. no re-enumeration takes place
    Stable interface names when kernels or drivers are updated/changed
    Stable interface names even if you have to replace broken ethernet cards by new ones
    The names are automatically determined without user configuration, they just work
    The interface names are fully predictable, i.e. just by looking at lspci you can figure out what the interface is going to be called
    Fully stateless operation, changing the hardware configuration will not result in changes in /etc
    Compatibility with read-only root
    The network interface naming now follows more closely the scheme used for aliasing block device nodes and other device nodes in /dev via symlinks
    Applicability to both x86 and non-x86 machines
    The same on all distributions that adopted systemd/udev
    It's easy to opt out of the scheme (see below)

Does this have any drawbacks? Yes, it does. Previously it was practically guaranteed that hosts equipped with a single ethernet card only had a single "eth0" interface. With this new scheme in place, an administrator now has to check first what the local interface name is before he can invoke commands on it where previously he had a good chance that "eth0" was the right name. 

I don't like this, how do I disable this?

You basically have three options:

    You disable the assignment of fixed names, so that the unpredictable kernel names are used again. For this, simply mask udev's .link file for the default policy: ln -s /dev/null /etc/systemd/network/99-default.link
    You create your own manual naming scheme, for example by naming your interfaces "internet0", "dmz0" or "lan0". For that create your own .link files in /etc/systemd/network/, that choose an explicit name or a better naming scheme for one, some, or all of your interfaces. See systemd.link(5) for more information.
    You pass the net.ifnames=0 on the kernel command line
